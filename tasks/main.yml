---
# tasks file for ansible-role-aegir3drulenium

- name: GIT | Ensure GIT CLONE of Drupal Projects
  git:
    repo: "https://git.drupal.org/project/{{ item.project_name }}.git"
    dest: "{{ aegir_root }}/hostmaster-{{ aegir_platform_version }}/sites/all/modules/{{ item.project_name }}"
#    depth: 1 # speeds things up
    version: "{{ item.git_repo_version }}"
    update: "{{ item.git_repo_update }}"
  register: drulenium_module_git_repos_registered
  with_items: "{{ drulenium_module_git_repos }}"
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_module_git_install
  tags: [git, download]

- name: Check if Aegir Drulenium modules are enabled
  shell: "drush @hm pm-info --fields=status --format=list {{ item.project_name }} | egrep 'disabled|not installed'"
  become: True
  become_user: "{{ aegir_user }}"
  register: drulenium_modules_enabled
  with_items: "{{ drulenium_module_git_repos }}"
  changed_when: False
  failed_when: False
  ignore_errors: yes

- debug:
    var: drulenium_modules_enabled

- name: Enable Aegir Drulenium modules
  command: "drush @hm --yes en {{ item.1.project_name }} --no-verify --strict=0"
  sudo: True
  sudo_user: "{{ aegir_user }}"
  with_indexed_items: "{{ drulenium_module_git_repos }}"
  when: "drulenium_modules_enabled.results[{{ item.0 }}].rc == 0"
  notify: Verify Aegir front-end

- name: GIT | Ensure GIT CLONE of PHP Selenium Web Driver
  git:
    repo: "{{ php_webdriver_repo }}"
    dest: "{{ aegir_root }}/hostmaster-{{ aegir_platform_version }}/sites/all/libraries/{{ php_webdriver_dest }}"
    version: "{{ php_webdriver_version }}"
    update: "{{ php_webdriver_update }}"
  register: php_webdriver
  become: yes
  become_user: "{{ aegir_user }}"
  tags: [git, download, selenium, selenium_webdriver]

- name: Check Drulenium server setting.
  shell: drush @hm vget drulenium_vr_config_server_opt --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_config_server_opt
  changed_when: False
  failed_when: False

- name: Set Drulenium server.
  shell: drush @hm vset drulenium_vr_config_server_opt local
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_config_server_opt.stdout != 'local' or
        drulenium_vr_config_server_opt.stderr == 'No matching variable found.'

- name: Check Drulenium server setting.
  shell: drush @hm vget drulenium_vr_config_image_server_opt --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_config_image_server_opt
  changed_when: False
  failed_when: False

- name: Set Drulenium image server.
  shell: drush @hm vset drulenium_vr_config_image_server_opt local
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_config_image_server_opt.stdout != 'local' or
        drulenium_vr_config_image_server_opt.stderr == 'No matching variable found.'

- name: Check ImageMagick path.
  shell: drush @hm vget drulenium_vr_release_imagemagick_path --format=string
  become: yes
  become_user: "{{ aegir_user }}"
  register: drulenium_vr_release_imagemagick_path
  changed_when: False
  failed_when: False

- name: Set ImageMagick path.
  shell: drush @hm vset drulenium_vr_release_imagemagick_path /usr/bin
  become: yes
  become_user: "{{ aegir_user }}"
  when: drulenium_vr_release_imagemagick_path.stdout != '/usr/bin' or
        drulenium_vr_release_imagemagick_path.stderr == 'No matching variable found.'

